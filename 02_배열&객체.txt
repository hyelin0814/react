■ 배열
  -useState  훅스는 실제로 값이 변경될 경우만 화면을 갱신한다
  따라서 배열과 객체를 복사할 경우에는 반드시 전개연산자를 사용해야한다
  참조) let arrCopy = _arr //값이 변하지않는다
  복사) let arrCopy = [..._arr] 

  -배열 객체를 useState로 변경할 경우 전개연산자를 사용해야함
  ex) _setArr([..._arr,홍길동])//_arr라는 변수에 '홍길동을 추가'

  리액트에서 배열 추가예시
  예시1)
    let arrCory =[..._arr ]//기존의 배열을 arrCopy에 복사,
    arrCory.push(name) //복사된 배열에 이름을 추가
    _setArr(arrCory) //_arr스테이트를 arrCopy로 재변경
  
  예시2)
   _setArr([..._arr, 홍길동]) //_arr라는 변수에 '홍길동을 추가'

   - 배열을 순환하여 출력
    배열형태로 리턴이 되어야 출력이 가능
    잘못된 출력형태 예시)
    arr= [1,2,3]
    arr.forEach((v)=>{ //실행결과, 1,2,3 이라는 값을 차례대로 리턴
      return v
    })
    올바른 출력형태 예시)
    arr.map((v)=>{ //실행결과 {1,2,3}이라는 배열을 리턴
      return v
    })

    - 배열안에 객체가 존재할 경우 배열을 출력할 수 없음 (배열을 순환하며 출력해야함)
    잘못된 출력형태예시)
    arr = [
      {}
    ]